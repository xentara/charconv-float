#pragma once

#include_next <charconv>

#if defined __GLIBCXX__ && _GLIBCXX_RELEASE < 11

// Define if float has the IEEE binary32 format.
#if __FLT_MANT_DIG__ == 24 \
  && __FLT_MIN_EXP__ == -125 \
  && __FLT_MAX_EXP__ == 128
# define _GLIBCXX_FLOAT_IS_IEEE_BINARY32 1
#endif

// Define if double has the IEEE binary64 format.
#if __DBL_MANT_DIG__ == 53 \
  && __DBL_MIN_EXP__ == -1021 \
  && __DBL_MAX_EXP__ == 1024
# define _GLIBCXX_DOUBLE_IS_IEEE_BINARY64 1
#endif

namespace std
{

inline namespace __chaconv_float_41f576ab_104c_442f_926d_69a25265c6cd
{

	_GLIBCXX_VISIBILITY(default) auto to_chars(char *first, char *last, float value) noexcept -> std::to_chars_result;
	_GLIBCXX_VISIBILITY(default) auto to_chars(char *first, char *last, double value) noexcept -> std::to_chars_result;
	_GLIBCXX_VISIBILITY(default) auto to_chars(char *first, char *last, long double value) noexcept -> std::to_chars_result;

} // namespace __chaconv_float_41f576ab_104c_442f_926d_69a25265c6cd

} // namespace std

#endif // defined __GLIBCXX__ && _GLIBCXX_RELEASE < 11
